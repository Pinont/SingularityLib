name: Snapshot Deploy (Central + GitHub)

on:
  push:
    branches: [ main ]

jobs:
  snapshot:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Read version
        id: v
        run: |
          VER=$(grep -m1 '<version>' pom.xml | sed -E 's/.*<version>([^<]+)<\/version>.*/\1/')
          echo "version=$VER" >> $GITHUB_OUTPUT
          if [[ "$VER" == *-SNAPSHOT ]]; then echo "deploy=true" >> $GITHUB_OUTPUT; else echo "deploy=false" >> $GITHUB_OUTPUT; fi

      - name: Abort (not SNAPSHOT)
        if: steps.v.outputs.deploy != 'true'
        run: echo "Version ${{ steps.v.outputs.version }} not snapshot."

      - name: Setup Java
        if: steps.v.outputs.deploy == 'true'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '23'

      - name: Write settings.xml
        if: steps.v.outputs.deploy == 'true'
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<'EOF'
          <settings>
            <servers>
              <server>
                <id>sonatype</id>
                <username>${env.SONATYPE_USERNAME}</username>
                <password>${env.SONATYPE_PASSWORD}</password>
              </server>
              <server>
                <id>github</id>
                <username>${env.GITHUB_ACTOR}</username>
                <password>${env.GITHUB_TOKEN}</password>
              </server>
            </servers>
          </settings>
          EOF
          sed 's/<password>.*<\/password>/<password>***<\/password>/' ~/.m2/settings.xml

      - name: Deploy Snapshot to Sonatype
        if: steps.v.outputs.deploy == 'true'
        run: mvn -B -DskipTests deploy

      - name: Deploy Snapshot to GitHub Packages
        if: steps.v.outputs.deploy == 'true'
        run: mvn -B -DskipTests -Pgithub -Dgpg.skip=true deploy

      - name: Summary
        run: echo "Snapshot ${{ steps.v.outputs.version }} deployed."