name: Release Deploy (Central + GitHub)

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Derive version
        id: rel
        run: |
          TAG="${GITHUB_REF_NAME}"
          VERSION="${TAG#v}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '23'

      - name: Import GPG Key
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          gpg --list-secret-keys

      - name: Write settings.xml
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<'EOF'
          <settings>
            <servers>
              <server>
                <id>sonatype</id>
                <username>${env.SONATYPE_USERNAME}</username>
                <password>${env.SONATYPE_PASSWORD}</password>
              </server>
              <server>
                <id>github</id>
                <username>${env.GITHUB_ACTOR}</username>
                <password>${env.GITHUB_TOKEN}</password>
              </server>
            </servers>
          </settings>
          EOF
          sed 's/<password>.*<\/password>/<password>***<\/password>/' ~/.m2/settings.xml

      - name: Set Release Version
        run: |
          mvn -B versions:set -DnewVersion="${{ steps.rel.outputs.version }}" -DgenerateBackupPoms=false
          grep -m1 '<version>' pom.xml

      - name: Deploy Release to Central (staging + signing)
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: mvn -B -DskipTests -Prelease-publish -Dgpg.passphrase="${GPG_PASSPHRASE}" deploy

      - name: Deploy Release to GitHub Packages
        run: mvn -B -DskipTests -Pgithub -Dgpg.skip=true deploy

      - name: GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "SingularityLib ${{ steps.rel.outputs.version }}"
          generate_release_notes: true
          files: |
            target/*-sources.jar
            target/*-javadoc.jar
            target/*.jar

      - name: Summary
        run: echo "Released ${{ steps.rel.outputs.version }} to Central & GitHub."